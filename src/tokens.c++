//Generated by:generate_tokeniser_enum.py
#include "tokens.h++"

const string tokens[] = {
	"char",   //0 :: TOK_KEYWORD_CHAR
	"int",    //1 :: TOK_KEYWORD_INT
	"byte",   //2 :: TOK_KEYWORD_BYTE
	"float",  //3 :: TOK_KEYWORD_FLOAT
	"ptr",    //4 :: TOK_KEYWORD_PTR
	"=",      //5 :: TOK_SYMBOL_ASSIGNMENT
	"set",    //6 :: TOK_KEYWORD_SET
	"reg",    //7 :: TOK_KEYWORD_REG
	"while",  //8 :: TOK_KEYWORD_WHILE
	"if",     //9 :: TOK_KEYWORD_IF
	"elif",   //10 :: TOK_KEYWORD_ELIF
	"else",   //11 :: TOK_KEYWORD_ELSE
	"goto",   //12 :: TOK_KEYWORD_GOTO
	"label",  //13 :: TOK_KEYWORD_LABEL
	"call",   //14 :: TOK_KEYWORD_CALL
	"fn",     //15 :: TOK_KEYWORD_FN
	"return", //16 :: TOK_KEYWORD_RETURN
	"+",      //17 :: TOK_SYMBOL_PLUS
	"-",      //18 :: TOK_SYMBOL_MINUS
	"*",      //19 :: TOK_SYMBOL_MUL
	"/",      //20 :: TOK_SYMBOL_DIV
	"==",     //21 :: TOK_SYMBOL_EQ
	"!=",     //22 :: TOK_SYMBOL_NEQ
	">=",     //23 :: TOK_SYMBOL_GREQ
	"<=",     //24 :: TOK_SYMBOL_LEQ
	">",      //25 :: TOK_SYMBOL_GRE
	"<",      //26 :: TOK_SYMBOL_LES
	",",      //27 :: TOK_SYMBOL_COMMA
	";",      //28 :: TOK_SEMICOLON
	"#",      //29 :: TOK_SYMBOL_REFERENCE
	"@",      //30 :: TOK_SYMBOL_DEREFERENCE
	"(",      //31 :: TOK_BRACE_OPEN_PAREN
	")",      //32 :: TOK_BRACE_CLOSE_PAREN
	"{",      //33 :: TOK_BRACE_OPEN_CURLEY
	"}",      //34 :: TOK_BRACE_CLOSE_CURLEY
	"[",      //35 :: TOK_BRACE_OPEN_SQUARE
	"]",      //36 :: TOK_BRACE_CLOSE_SQUARE
};
