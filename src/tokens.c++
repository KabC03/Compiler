//Generated by:generate_tokeniser_enum.py
#include "tokens.h++"

const string tokens[] = {
	"char",   //0 :: TOK_KEYWORD_CHAR
	"int",    //1 :: TOK_KEYWORD_INT
	"float",  //2 :: TOK_KEYWORD_FLOAT
	"=",      //3 :: TOK_SYMBOL_ASSIGNMENT
	"while",  //4 :: TOK_KEYWORD_WHILE
	"if",     //5 :: TOK_KEYWORD_IF
	"elif",   //6 :: TOK_KEYWORD_ELIF
	"else",   //7 :: TOK_KEYWORD_ELSE
	"call",   //8 :: TOK_KEYWORD_CALL
	"fn",     //9 :: TOK_KEYWORD_FN
	"return", //10 :: TOK_KEYWORD_RETURN
	"+",      //11 :: TOK_SYMBOL_PLUS
	"-",      //12 :: TOK_SYMBOL_MINUS
	"*",      //13 :: TOK_SYMBOL_MUL
	"/",      //14 :: TOK_SYMBOL_DIV
	"==",     //15 :: TOK_SYMBOL_EQUALS
	"!=",     //16 :: TOK_SYMBOL_NEQ
	">=",     //17 :: TOK_SYMBOL_GREQ
	"<=",     //18 :: TOK_SYMBOL_LEQ
	">",      //19 :: TOK_SYMBOL_GREATER
	"<",      //20 :: TOK_SYMBOL_LESS
	",",      //21 :: TOK_SYMBOL_COMMA
	";",      //22 :: TOK_SEMICOLON
	"#",      //23 :: TOK_SYMBOL_REFERENCE
	"@",      //24 :: TOK_SYMBOL_DEREFERENCE
	"(",      //25 :: TOK_BRACE_OPEN_PAREN
	")",      //26 :: TOK_BRACE_CLOSE_PAREN
	"{",      //27 :: TOK_BRACE_OPEN_CURLEY
	"}",      //28 :: TOK_BRACE_CLOSE_CURLEY
	"[",      //29 :: TOK_BRACE_OPEN_SQUARE
	"]",      //30 :: TOK_BRACE_CLOSE_SQUARE
};
