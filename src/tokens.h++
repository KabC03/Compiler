//Generated by:generate_tokeniser_enum.py
#include <string>
#define NUM_TOKENS 37
using namespace std;

extern const string tokens[];
typedef enum TOKEN_ENUM : int {
	TOK_FLOAT_IMM = -1,
	TOK_INT_IMM = -2,
	TOK_CHAR_IMM = -3,
	TOK_STRING_IMM = -4,
	TOK_IDENTIFIER = -5,
	TOK_INVALID = -6,
	TOK_EOF = -7,
	TOK_TYPE_INT = -8,
	TOK_TYPE_BYTE = -9,
	TOK_TYPE_FLOAT = -10,
	TOK_TYPE_PTR = -11,
	TOK_TYPE_PTR_REF = -12,
	TOK_TYPE_PTR_DEREF = -13,
	TOK_KEYWORD_CHAR = 0,       //0 ::  char
	TOK_KEYWORD_INT = 1,        //1 ::  int
	TOK_KEYWORD_BYTE = 2,       //2 ::  byte
	TOK_KEYWORD_FLOAT = 3,      //3 ::  float
	TOK_KEYWORD_PTR = 4,        //4 ::  ptr
	TOK_SYMBOL_ASSIGNMENT = 5,  //5 ::  =
	TOK_KEYWORD_SET = 6,        //6 ::  set
	TOK_KEYWORD_REG = 7,        //7 ::  reg
	TOK_KEYWORD_WHILE = 8,      //8 ::  while
	TOK_KEYWORD_IF = 9,         //9 ::  if
	TOK_KEYWORD_ELIF = 10,       //10 ::  elif
	TOK_KEYWORD_ELSE = 11,       //11 ::  else
	TOK_KEYWORD_GOTO = 12,       //12 ::  goto
	TOK_KEYWORD_LABEL = 13,      //13 ::  label
	TOK_KEYWORD_CALL = 14,       //14 ::  call
	TOK_KEYWORD_FN = 15,         //15 ::  fn
	TOK_KEYWORD_RETURN = 16,     //16 ::  return
	TOK_SYMBOL_PLUS = 17,        //17 ::  +
	TOK_SYMBOL_MINUS = 18,       //18 ::  -
	TOK_SYMBOL_MUL = 19,         //19 ::  *
	TOK_SYMBOL_DIV = 20,         //20 ::  /
	TOK_SYMBOL_EQ = 21,          //21 ::  ==
	TOK_SYMBOL_NEQ = 22,         //22 ::  !=
	TOK_SYMBOL_GREQ = 23,        //23 ::  >=
	TOK_SYMBOL_LEQ = 24,         //24 ::  <=
	TOK_SYMBOL_GRE = 25,         //25 ::  >
	TOK_SYMBOL_LES = 26,         //26 ::  <
	TOK_SYMBOL_COMMA = 27,       //27 ::  ,
	TOK_SEMICOLON = 28,          //28 ::  ;
	TOK_SYMBOL_REFERENCE = 29,   //29 ::  #
	TOK_SYMBOL_DEREFERENCE = 30, //30 ::  @
	TOK_BRACE_OPEN_PAREN = 31,   //31 ::  (
	TOK_BRACE_CLOSE_PAREN = 32,  //32 ::  )
	TOK_BRACE_OPEN_CURLEY = 33,  //33 ::  {
	TOK_BRACE_CLOSE_CURLEY = 34, //34 ::  }
	TOK_BRACE_OPEN_SQUARE = 35,  //35 ::  [
	TOK_BRACE_CLOSE_SQUARE = 36, //36 ::  ]
} TOKEN_ENUM;
