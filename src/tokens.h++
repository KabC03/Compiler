//Generated by:generate_tokeniser_enum.py
#include <string>
#define NUM_TOKENS 36
using namespace std;

extern const string tokens[];
typedef enum TOKEN_ENUM : int {
	TOK_FLOAT_IMM = -1,
	TOK_INT_IMM = -2,
	TOK_CHAR_IMM = -3,
	TOK_STRING_IMM = -4,
	TOK_IDENTIFIER = -5,
	TOK_INVALID = -6,
	TOK_EOF = -7,
	TOK_TYPE_INT = -8,
	TOK_TYPE_FLOAT = -9,
	TOK_TYPE_PTR = -10,
	TOK_TYPE_PTR_REF = -11,
	TOK_TYPE_PTR_DEREF = -12,
	TOK_KEYWORD_CHAR = 0,       //0 ::  char
	TOK_KEYWORD_INT = 1,        //1 ::  int
	TOK_KEYWORD_FLOAT = 2,      //2 ::  float
	TOK_KEYWORD_PTR = 3,        //3 ::  ptr
	TOK_SYMBOL_ASSIGNMENT = 4,  //4 ::  =
	TOK_KEYWORD_SET = 5,        //5 ::  set
	TOK_KEYWORD_REG = 6,        //6 ::  reg
	TOK_KEYWORD_WHILE = 7,      //7 ::  while
	TOK_KEYWORD_IF = 8,         //8 ::  if
	TOK_KEYWORD_ELIF = 9,       //9 ::  elif
	TOK_KEYWORD_ELSE = 10,       //10 ::  else
	TOK_KEYWORD_GOTO = 11,       //11 ::  goto
	TOK_KEYWORD_LABEL = 12,      //12 ::  label
	TOK_KEYWORD_CALL = 13,       //13 ::  call
	TOK_KEYWORD_FN = 14,         //14 ::  fn
	TOK_KEYWORD_RETURN = 15,     //15 ::  return
	TOK_SYMBOL_PLUS = 16,        //16 ::  +
	TOK_SYMBOL_MINUS = 17,       //17 ::  -
	TOK_SYMBOL_MUL = 18,         //18 ::  *
	TOK_SYMBOL_DIV = 19,         //19 ::  /
	TOK_SYMBOL_EQ = 20,          //20 ::  ==
	TOK_SYMBOL_NEQ = 21,         //21 ::  !=
	TOK_SYMBOL_GREQ = 22,        //22 ::  >=
	TOK_SYMBOL_LEQ = 23,         //23 ::  <=
	TOK_SYMBOL_GRE = 24,         //24 ::  >
	TOK_SYMBOL_LES = 25,         //25 ::  <
	TOK_SYMBOL_COMMA = 26,       //26 ::  ,
	TOK_SEMICOLON = 27,          //27 ::  ;
	TOK_SYMBOL_REFERENCE = 28,   //28 ::  #
	TOK_SYMBOL_DEREFERENCE = 29, //29 ::  @
	TOK_BRACE_OPEN_PAREN = 30,   //30 ::  (
	TOK_BRACE_CLOSE_PAREN = 31,  //31 ::  )
	TOK_BRACE_OPEN_CURLEY = 32,  //32 ::  {
	TOK_BRACE_CLOSE_CURLEY = 33, //33 ::  }
	TOK_BRACE_OPEN_SQUARE = 34,  //34 ::  [
	TOK_BRACE_CLOSE_SQUARE = 35, //35 ::  ]
} TOKEN_ENUM;
