//Generated by:generate_tokeniser_enum.py
#include <string>
#define NUM_TOKENS 25
using namespace std;

extern const string tokens[];
typedef enum TOKEN_ENUM : int {
	TOK_FLOAT_IMM = -1,
	TOK_INT_IMM = -2,
	TOK_CHAR_IMM = -3,
	TOK_STRING_IMM = -4,
	TOK_IDENTIFIER = -5,
	TOK_INVALID = -6,
	TOK_KEYWORD_CHAR,             //0 ::  char
	TOK_KEYWORD_INT,              //1 ::  int
	TOK_KEYWORD_FLOAT,            //2 ::  float
	TOK_SYMBOL_REFERENCE,         //3 ::  @
	TOK_KEYWORD_LET,              //4 ::  let
	TOK_KEYWORD_SET,              //5 ::  set
	TOK_SYMBOL_ASSIGNMENT,        //6 ::  =
	TOK_KEYWORD_WHILE,            //7 ::  while
	TOK_KEYWORD_FOR,              //8 ::  for
	TOK_KEYWORD_IF,               //9 ::  if
	TOK_KEYWORD_ELIF,             //10 ::  elif
	TOK_KEYWORD_ELSE,             //11 ::  else
	TOK_KEYWORD_FN,               //12 ::  fn
	TOK_KEYWORD_CALL,             //13 ::  call
	TOK_KEYWORD_RETURN,           //14 ::  return
	TOK_KEYWORD_RETURN_SPECIFIER, //15 ::  ->
	TOK_SYMBOL_PLUS,              //16 ::  +
	TOK_SYMBOL_MINUS,             //17 ::  -
	TOK_SYMBOL_MULTIPLY,          //18 ::  *
	TOK_SYMBOL_DIVIDE,            //19 ::  /
	TOK_SYMBOL_DEREFERENCE,       //20 ::  &
	TOK_SYMBOL_EQUALS,            //21 ::  ==
	TOK_SYMBOL_NOT_EQUAL,         //22 ::  !=
	TOK_BRACE_OPEN_PAREN,         //23 ::  (
	TOK_BRACE_CLOSE_PAREN,        //24 ::  )
} TOKEN_ENUM;
